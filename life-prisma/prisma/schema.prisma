// schema.prisma

datasource db {
  provider = "mongodb"
  url      = env("MONGO_URI")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  INSTALADOR
}

model User {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  VATIN     String       @unique
  access    Boolean      @default(false)
  address   String
  email     String       @unique(map: "email_1")
  lastName  String
  name      String
  orders    Order[] // Array of orders related to the user
  password  String
  phone     Int          @unique(map: "phone_1")
  role      Role
  createdAt DateTime     @db.Date @default(now())
  updatedAt DateTime     @db.Date @default(now())
}

model Category {
  id       String         @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  urlImage String
}

model Product {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  accessories String?
  categoryId  String      @db.ObjectId
  description String
  name        String      @unique(map: "name_1")
  price       Int
  stock       Int
  urlImage    String
  urlMoreInfo String
  CartItem    CartItem[]
}

model Order {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  amount    Int
  owner     String        @db.ObjectId
  user      User          @relation(fields: [owner], references: [id])
  products  CartItem[]
  createdAt DateTime      @db.Date @default(now())
  updatedAt DateTime      @db.Date @default(now())
}

model CartItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  amount    Int
  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
  order     Order?  @relation(fields: [orderId], references: [id])
  orderId   String? @db.ObjectId
  
}
